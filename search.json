[{"title":"GithubPages+Hexo的博客搭建","url":"/2022/04/18/GithubPages-Hexo%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","content":"写在前面致谢\n本文是笔者参考B站UP主视频搬运崽啊的教学视频搭建了自己的博客后，写的一篇总结，在这里向视频搬运崽致谢！之前只是一味的学知识，表达能力极差，也想通过写博客增强自己的表达能力。\n\n谁适合这篇博客\n如果你是一个大牛，正在网上冲浪，那么这篇文章会浪费您宝贵的三分钟。\n\n如果你是一个小白，想要搭建自己的博客，却屡屡碰壁，那么请您耐心地看下去。\n\n\n常见问题\n网络问题：在执行hexo d等命令时，报错spawned failed/access failed,这些因为我天朝独特的网络原因，导致连接失败，耐心点，多试几次就好。\n\n准备工具下载安装Node.js\n点击下载Node.js\n一直点下一步就行，如果有需要，可以参考这篇博客：Node.js安装及环境配置之Windows篇\n\nGit\n点击下载Git\n安装参考这篇教程：Windows系统Git安装教程(详解Git安装过程)\n\n检测是否安装正确\nwin+R键，然后输入cmd打开终端窗口\n\n分别输入下面三行命令，检查工具是否安装成功：\nnode -vnpm -vgit --version\n\n如果分别显示了版本号，那么恭喜你安装成功！\n\n\n安装Hexo\n在终端输入命令npm install hexo-cli -g安装hexo\n输入hexo -v查看是否安装成功，如果看到了hexo版本号，那么恭喜你完成了第一步。\n\n搭建仓库GitHub账号\n首先你要有一个GitHub的账号，申请注册等不再赘述\n需要注意的是，你一定要记住自己的三个信息\n\n用户名：比如笔者的用户名就是Hasakki23,取自笔者很喜欢的一个英雄yasuo\n注册邮箱：形式是”&#120;&#120;&#120;&#x78;&#x78;&#120;&#x78;&#x40;&#x78;&#120;&#46;&#x63;&#x6f;&#109;“\n密码：这个自己记住就行\n\n\n\n创建GitHub仓库\n\n\n\n点击new\n\n\n\n\n\nRepository name填写 用户名+.github.io\n勾选 add a readme file\n\n仓库创建成功\n生成SSH Keys电脑是否有SSH\n随便进入一个本地文件\n在空白处右键，选择Git Bash Here，打开命令窗口\n输入ssh;检测是否有ssh,应该是都有的\n\n生成SSH\n输入ssh：ssh-keygen -t rsa -C &quot;你的注册邮箱&quot;，接下来点击四次回车。完成后不要关闭\n找到C盘-&gt;User-&gt;你电脑的当前用户-&gt;.ssh-&gt;id.rsa.pub，用nodepad++打开，将里面的内容全部复制\n\n在Github中添加你的SSH\n回到github，点击头像，找到下拉菜单里的Settings选项，左边选项栏找到SSH,点击进入\n在SSH Keys中，选择新建钥匙，钥匙名字随便取，将刚刚id.rsa.pub中的内容粘贴进去，不要做任何删改！\n在刚才的命令窗口中，输入ssh -T git@github.com ,检查是否绑定成功。\n看到yes/no时，输入yes\n绑定成功后会提醒绑定成功！\n\n生成本地页面\n首先建立一个自己的博客文件夹\n进入文件夹，空白处右键，Git Bash Here\n初始化hexo,输入hexo init，完成初始化后，你的博客文件夹会出现一些配置文件\n生成静态页面：输入hexo server，启动服务器后，你就可以在http://localhost:4000/看到自己博客的静态页面了，但是这个页面别人暂时还看不到\n\n同步到个人博客\n将你生成的博客发布到互联网上去，和大家分享！\n\n修改配置文件\n找到你博客文件夹上的_config.yml文件，用nodepad++打开\n\n找到deploy的部分，将deploy部分删除，替换为下面的代码：\ndeploy:  type: git  repository: xxx.github.io  branch: main\n\ntype:填git\nrepository:回到github，找到你刚才创建的仓库\n\n\n图中的选项就是你的仓库地址！\n\n\n更新：这里如果选择Https的格式，经常会出现Spawn failed 所以请选用SSH的格式！\n  branch:填main,这是github的一项改动，网上很多教程是master,但填写master是无法工作的！\n  注意：在type,repository,branch 三个选项后填写内容时，要在冒号后面加一个英文的空格！\n同步到个人博客\n空白处右键，Git Bash Here，进入命令窗口\n安装hexo-deployer-git自动部署发布工具：npm install hexo-deployer-git --save\n生成：hexo g\n发布：hexo d\n\nGithub账号密码验证\n账号：你的用户名，输入后跳转到密码界面。\n\n密码：这里是一个令牌，你要去到Settings-&gt;Developer settings-&gt;Personal access token\n\n\n\n点击生成令牌\n\n配置令牌，名字随便取，权限全部勾选，然后点击生成令牌\n\n随后会出现很长一段字符串，这就是令牌。复制到刚才输入密码的界面，粘贴，确定。\n\n仓库的网址，就是你的仓库名，即 用户名.github.io\n\n接下来就可以在你的博客上分享你的文章了！\n\n\n\n\n最初的博客是很丑的:cry:,但是你可以去自主寻找美化博客的方法，个性化你的博客！\n","tags":["博客搭建"]},{"title":"Hexo+Typora图片显示问题","url":"/2022/04/18/Hexo-Typora%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/","content":"写在前面​\t笔者最近拾起了许久未用的博客，准备做一些产出，因为在最近的学习中，笔者发现自己效率低下，希望能通过博客记录的形式，来督促自己进行深度思考。\n​\t昨天，笔者使用Hexo和GithubPages重新搭建了个人博客。今天上午笔者检查个人博客时出现了图片无法加载的问题，Google了一上午，终于解决了这个问题，于是乎决定记录下来，和大家分享一下我的解决办法。\n解决办法Typora配置具体步骤​\t打开”文件”-&gt;”偏好设置”，点击”图像”。将插入图片时的选项改为”复制到指定路径”，将下面的指定路径改为./$&#123;filename&#125;/\n\n\n原因解释​\t上面的操作会让我们在插入图片时，自动将图片复制到当前文件夹的子文件夹里，这个文件夹和你的.md文档同名。因为./代表当前文件夹，$&#123;filename&#125;是当前文件名。\n​\t效果图如下：\n\n\n_congfig.yml配置具体步骤​\t打开”你的博客文件夹名称”下的_config.yml文件(建议使用Notepad++)\n​\t找到post_asset_folder这个选项，并设置为true\n原因解释​\t这个步骤会让你在使用hexo new &quot; &quot;生成博客时，在.md文档所在文件夹内生成一个同名文件夹，这和我们的typora配置相契合！\n安装插件hexo-asset-img具体步骤\n在你的博客文件内右键Git Bash Here，输入命令npm install https://github.com/CodeFalling/hexo-asset-image --save\n\n进入博客文件夹内，找到node_modules-&gt;hexo-asset-image文件夹，打开后里面有一个index.js文件，将内容替换成下面的部分：\n&#x27;use strict&#x27;;var cheerio = require(&#x27;cheerio&#x27;);// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-stringfunction getPosition(str, m, i) &#123;  return str.split(m, i).join(m).length;&#125;var version = String(hexo.version).split(&#x27;.&#x27;);hexo.extend.filter.register(&#x27;after_post_render&#x27;, function(data)&#123;  var config = hexo.config;  if(config.post_asset_folder)&#123;      var link = data.permalink;  if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)     var beginPos = getPosition(link, &#x27;/&#x27;, 1) + 1;  else     var beginPos = getPosition(link, &#x27;/&#x27;, 3) + 1;  // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.  var endPos = link.lastIndexOf(&#x27;/&#x27;) + 1;    link = link.substring(beginPos, endPos);var toprocess = [&#x27;excerpt&#x27;, &#x27;more&#x27;, &#x27;content&#x27;];for(var i = 0; i &lt; toprocess.length; i++)&#123;  var key = toprocess[i];  var $ = cheerio.load(data[key], &#123;    ignoreWhitespace: false,    xmlMode: false,    lowerCaseTags: false,    decodeEntities: false  &#125;);  $(&#x27;img&#x27;).each(function()&#123;if ($(this).attr(&#x27;src&#x27;))&#123;  // For windows style path, we replace &#x27;\\&#x27; to &#x27;/&#x27;.  var src = $(this).attr(&#x27;src&#x27;).replace(&#x27;\\\\&#x27;, &#x27;/&#x27;);  if(!/http[s]*.*|\\/\\/.*/.test(src) &amp;&amp;     !/^\\s*\\//.test(src)) &#123;    // For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.    // In addition, to support multi-level local directory.    var linkArray = link.split(&#x27;/&#x27;).filter(function(elem)&#123;    return elem != &#x27;&#x27;;    &#125;);    var srcArray = src.split(&#x27;/&#x27;).filter(function(elem)&#123;    return elem != &#x27;&#x27; &amp;&amp; elem != &#x27;.&#x27;;    &#125;);    if(srcArray.length &gt; 1)    srcArray.shift();    src = srcArray.join(&#x27;/&#x27;);    $(this).attr(&#x27;src&#x27;, config.root + link + src);    console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);  &#125;&#125;else&#123;  console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);  console.info&amp;&amp;console.info($(this));    &#125;  &#125;);  data[key] = $.html();    &#125;  &#125;&#125;);\n\n原因解释这是因为我们下载的插件是有问题的，具体问题笔者也没搞懂，网上有换源下载的办法，但是笔者没有成功，直接修改文件就可以了。\n\n\n结果展示输入以下命令检测是否配置成功：\nhexo cleanhexo generatehexo server //可以先看一下是否配置成功hexo deploy\n\n\n\n​\t图片成功显示！\n","tags":["博客搭建"]}]